<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neo.blog.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.neo.blog.entity.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="state" jdbcType="BIT" property="state" />
    <result column="enable" jdbcType="BIT" property="enable" />
  </resultMap>

  <sql id="Base_Column_List">
    id, nick_name, email, phone, password, avatar_url, state, enable
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.neo.blog.entity.User">
    insert into sys_user (id, nick_name, email, 
      phone, password, avatar_url, 
      state, enable)
    values (#{id,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, 
      #{state,jdbcType=BIT}, #{enable,jdbcType=BIT})
  </insert>

  <insert id="insertSelective" parameterType="com.neo.blog.entity.User">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="enable != null">
        enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.neo.blog.entity.User">
    update sys_user
    <set>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=BIT},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.neo.blog.entity.User">
    update sys_user
    set nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT},
      enable = #{enable,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectOne" parameterType="com.neo.blog.entity.User" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from sys_user
    where 1=1
    <if test="email != null">
      and email = #{email, jdbcType=VARCHAR}
    </if>
    <if test="phone != null">
      and phone = #{phone, jdbcType=VARCHAR}
    </if>
  </select>

  <delete id="deleteByEmail" parameterType="java.lang.String">
    delete from sys_user
    where email = #{email,jdbcType=VARCHAR}
  </delete>
</mapper>